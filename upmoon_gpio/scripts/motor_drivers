#!/usr/bin/env python3

from upmoon_gpio import MotorListener, TrinamicsMotor, Stepper, PWM, DCBrushed
import rospy

class MotorDriver:
    
    def __init__(self):
        self.motors = []

        # self.create_drivetrain()
        # self.create_articulators()
        # self.create_excavator()
        # self.create_excavator()
        self.motors.append(Stepper(topic="/motor/ankle/lf", disable_pin=0, dir_pin=27, step_pin=17, delay=0.50, revs_per_turn=1))

        rospy.loginfo("Inititalized motor driver")

        self.run()


    def create_drivetrain(self):
        self.motors.append(TrinamicsMotor(topic="/motor/wheel_lf_joint", motor_id=1))
        self.motors.append(TrinamicsMotor(topic="/motor/wheel_lm_joint", motor_id=2))
        self.motors.append(TrinamicsMotor(topic="/motor/wheel_lb_joint", motor_id=3))
        self.motors.append(TrinamicsMotor(topic="/motor/wheel_rf_joint", motor_id=4))
        self.motors.append(TrinamicsMotor(topic="/motor/wheel_rm_joint", motor_id=5))
        self.motors.append(TrinamicsMotor(topic="/motor/wheel_rb_joint", motor_id=6))


    def create_articulators(self):
        self.motors.append(Stepper(topic="/motor/ankle_lf_joint", disable_pin=0, dir_pin=1, step_pin=2))
        self.motors.append(Stepper(topic="/motor/ankle_lm_joint", disable_pin=0, dir_pin=1, step_pin=2))
        self.motors.append(Stepper(topic="/motor/ankle_lb_joint", disable_pin=0, dir_pin=1, step_pin=2))
        self.motors.append(Stepper(topic="/motor/ankle_rf_joint", disable_pin=0, dir_pin=1, step_pin=2))
        self.motors.append(Stepper(topic="/motor/ankle_rm_joint", disable_pin=0, dir_pin=1, step_pin=2))
        self.motors.append(Stepper(topic="/motor/ankle_rb_joint", disable_pin=0, dir_pin=1, step_pin=2))


    def create_excavator(self):
        self.motors.append(DCBrushed(topic='/motor/excavate_spin', address=128, motor_num=1))
        self.motors.append(PWM(topic='/motor/excavate_actuator', pin=0, freq=50, min_dc=0, max_dc=100, init_range=0))


    def create_depositor(self):
        self.motors.append(PWM(topic='/motor/depositor_actuator', pin=0, freq=50, min_dc=0, max_dc=100, init_range=0))


    def run(self):
        while not rospy.is_shutdown():
            for motor in self.motors:
                motor.run()


if __name__ == '__main__':
    rospy.init_node('motor_driver')

    md = MotorDriver()

